import java.util.regex.Matcher; // Uses built in java util to have regex functionality to match the criteria of regex
import java.util.regex.Pattern;  // This important allows us to have regex and store regex criteria


/**
 * This class was auto generated by the intellij but it creates a user class
 *  where we have private fields of name and password
 **/
public class User {
    private String name;
    private String password;

    /**
    *Empty constructor made by intellij
     **/
    public User() {
    }

    /**
     * Getter method where we retrieve the name field
     **/
    public String getName() {
        return name;
    }

    /**
     * Setter method where we set the name field to the String name parameter
     * setting name in user
     **/
    public void setName(String name) {
        this.name = name;
    }

    /**
     *Getter method where we retrieve the password field
     **/
    public String getPassword() {
        return password;
    }

    /**
     * Setter method where we set the name field to the String password parameter
     * setting password in user
     **/
    public void setPassword(String password) {
        this.password = password;
    }

    /**
    * @isvalidpassword method uses imports Pattern and Matcher where it sets the criteria of the password for the user
     * initially checks if the password is entered if so it returns false
     * regex is setup in pattern and matcher matches the password to regex criteria
    **/
    public boolean isValidPassword(String password) {

        if (password == null) return false;

        String regex = "^(?=.{3,8}[0-9])"
                + "(?=.*[a-z])"
                + "(?=.*[A-Z])"
                + "(?=.*[@$%^&+=])"
                + "(?=.*[#])"
                + "(?=.*[_])"
                + "(?=\\S+$).{8,20}$";

        Pattern p = Pattern.compile(regex);
        Matcher m = p.matcher(password);
        return m.matches();
    }


}
